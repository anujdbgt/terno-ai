------
Models:
------
	User
		- id
		- login
		- password
		- email

	Roles:
		- roleid
		- name

	RoleMembers:
		- Role
		- User

	DataSources:
		- sourceId
		- connectionString
		- enabled: True/False

	Tables:
		- sourceId
		- TableId
		- tableName
		- pubname
		- visible: t/f
		- List of TableColumns

	TableColumn:
		- columnName
		- type: datatype
		- publicColumn
		- visible:false

	RowFilters:
		- Table: tableid
		- Role
		- filterstring

	AllowedTables:
		- Role
		- Table

	AllowedColumns:
		- Role
		- Column

	LLM:
		- name(100)
		- API Key: text(200)
		- enabled: False/True
		- default: False/True
------
  API
------

[@loggedin]
def generate_table_response(sourceid, user_id, query):
	# get the roles of the user
	roles = getRoles()
	db = create_db_schema(roles)
	sql = llm.call(query)
	sec_sql = db.clean(sql, db.get_params())
	result = execute_sql(source, sec_sql)
	return result

---
